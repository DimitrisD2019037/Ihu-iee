CCS PCH C Compiler, Version 5.011, 5967               01-Ã·Ò-23 12:36

               Filename:   E:\Dimitris - Panagiotis T8\Lab1\CCS\ask1.lst

               ROM used:   142 bytes (0%)
                           Largest free fragment is 31794
               RAM used:   5 (0%) at main() level
                           6 (0%) worst case
               Stack used: 1 locations
               Stack size: 30

*
0000:  GOTO   0030
.................... #include <main-proteus.h>  
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
....................  
.................... #list 
....................  
.................... #DEVICE HIGH_INTS=TRUE 
....................  #device icd=2 
.................... #device adc=10 
....................  
.................... #FUSES NOWDT                     //No Watch Dog Timer 
.................... #FUSES WDT32768                    //Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES HSPLL                     //High Speed Crystal/Resonator with PLL enabled 
.................... #FUSES NOPROTECT                 //Code not protected from reading 
.................... #FUSES BROWNOUT                //No brownout reset 
.................... //#FUSES BORV20                    //Brownout reset at 2.0V 
.................... #FUSES NOPUT                     //No Power Up Timer 
.................... #FUSES NOCPD                     //No EE protection 
.................... #FUSES STVREN                    //Stack full/underflow will cause reset 
.................... #FUSES NODEBUG                   //No Debug mode for ICD 
.................... #FUSES NOLVP                     //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOWRT                     //Program memory not write protected 
.................... #FUSES NOWRTD                    //Data EEPROM not write protected 
.................... #FUSES NOIESO                      //Internal External Switch Over mode enabled 
.................... #FUSES NOFCMEN                     //Fail-safe clock monitor enabled 
.................... #FUSES NOPBADEN                 ///PORTB pins are configured as analog input channels on RESET 
.................... #FUSES NOWRTC                    //configuration not registers write protected 
.................... #FUSES NOWRTB                    //Boot block not write protected 
.................... #FUSES NOEBTR                    //Memory not protected from table reads 
.................... #FUSES NOEBTRB                   //Boot block not protected from table reads 
.................... #FUSES NOCPB                     //No Boot Block code protection 
.................... #FUSES MCLR                      //Master Clear pin enabled 
.................... #FUSES NOLPT1OSC                   //Timer1 configured for low-power operation 
.................... #FUSES NOXINST                   //Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
.................... #FUSES PLL5                      //Divide By 12(48MHz oscillator input) 
.................... #FUSES CPUDIV1                   //System Clock by 2 
.................... #FUSES USBDIV                    //USB clock source comes from PLL divide by 2 
.................... #FUSES VREGEN                    //USB voltage regulator enabled 
.................... //#FUSES ICPRT                     //ICPRT enabled 
.................... #FUSES WRTB 
.................... #FUSES NOICPRT  
.................... #FUSES NOLPT1OSC 
.................... #FUSES CCP2B3  
.................... #FUSES NOCPB 
.................... #FUSES NOCPD 
.................... #FUSES NOWRTC 
.................... #FUSES NOWRTD 
.................... #FUSES NOEBTR 
.................... #FUSES NOEBTRB               
....................  
.................... /* systm clock is 48 MHz */ 
.................... #use delay(clock=48000000,RESTART_WDT) 
0004:  CLRF   FEA
0006:  MOVLW  06
0008:  MOVWF  FE9
000A:  MOVF   FEF,W
000C:  BZ    002E
000E:  MOVLW  0F
0010:  MOVWF  01
0012:  MOVLW  BF
0014:  MOVWF  00
0016:  CLRWDT
0018:  DECFSZ 00,F
001A:  BRA    0016
001C:  DECFSZ 01,F
001E:  BRA    0012
0020:  MOVLW  8F
0022:  MOVWF  00
0024:  DECFSZ 00,F
0026:  BRA    0024
0028:  CLRWDT
002A:  DECFSZ FEF,F
002C:  BRA    000E
002E:  RETURN 0
.................... /* --- BEGIN: changes required for bootloader ------------------------------ */ 
....................  
.................... /* ------------------------------------------------------------------------- */ 
.................... /* map reset vector and interrupt vector                                     */ 
.................... /* 0x000-0x7FF is used by the bootloader. The bootloader maps the original   */ 
.................... /* reset vecotr (0x000) to 0x800 and the reset vector (0x008) to 0x800.      */ 
.................... /* ------------------------------------------------------------------------- */ 
.................... #build (reset=0x000, interrupt=0x008) 
....................  
.................... /* ------------------------------------------------------------------------- */ 
.................... /* reserve boot block area                                                   */ 
.................... /* This memory range is used by the bootloader, so the application must not  */ 
.................... /* use this area.                                                            */ 
.................... /* ------------------------------------------------------------------------- */ 
.................... //#org 0  , 0x000 {} 
....................  
.................... /* --- END: changes required for bootloader -------------------------------- */ 
....................  
....................  
....................  
....................  
....................  
.................... #byte PORTB =0xF81 //??s? µ??µ?? t?? PORTB 
.................... void main(void){ 
0030:  CLRF   FF8
0032:  BSF    FD0.7
0034:  MOVF   FC1,W
0036:  ANDLW  C0
0038:  IORLW  0F
003A:  MOVWF  FC1
003C:  MOVLW  07
003E:  MOVWF  FB4
....................    set_tris_b(0x00); //???sµ?? PORTB ?? ???d??  
0040:  MOVLW  00
0042:  MOVWF  F93
....................    PORTB =0b11111111;  //???sµ?? t?µ?? st?? PORTB 
0044:  SETF   F81
....................    while(TRUE) {     //??a p??ta                           
....................       delay_ms(250);    //a?aµ??? 250ms 
0046:  MOVLW  FA
0048:  MOVWF  06
004A:  RCALL  0004
....................        PORTB=0b00000000;  //LED sﬂ?st? 
004C:  CLRF   F81
....................        delay_ms(250);     //a?aµ??? 250ms 
004E:  MOVLW  FA
0050:  MOVWF  06
0052:  RCALL  0004
....................        PORTB=0b00000100;  //LED a?aµµ??a      
0054:  MOVLW  04
0056:  MOVWF  F81
....................        delay_ms(10000); 
0058:  MOVLW  28
005A:  MOVWF  05
005C:  MOVLW  FA
005E:  MOVWF  06
0060:  RCALL  0004
0062:  DECFSZ 05,F
0064:  BRA    005C
....................        PORTB=0b00000010;  //LED a?aµµ??a      
0066:  MOVLW  02
0068:  MOVWF  F81
....................        delay_ms(2000); 
006A:  MOVLW  08
006C:  MOVWF  05
006E:  MOVLW  FA
0070:  MOVWF  06
0072:  RCALL  0004
0074:  DECFSZ 05,F
0076:  BRA    006E
....................        PORTB=0b00000001;  //LED a?aµµ??a      
0078:  MOVLW  01
007A:  MOVWF  F81
....................        delay_ms(10000); 
007C:  MOVLW  28
007E:  MOVWF  05
0080:  MOVLW  FA
0082:  MOVWF  06
0084:  RCALL  0004
0086:  DECFSZ 05,F
0088:  BRA    0080
008A:  BRA    0046
....................     } 
....................  } 
....................  
008C:  BRA    008C

Configuration Fuses:
   Word  1: 0E24   PLL5 CPUDIV1 USBDIV HSPLL NOFCMEN NOIESO
   Word  2: 1E39   NOPUT NOBROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8000   CCP2B3 NOPBADEN NOLPT1OSC MCLR
   Word  4: 0020   NOSTVREN NOLVP ICSP2 NOXINST DEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB

   Some fuses have been forced to be compatible with the ICD debugger.
